services:
  # Log Management Database
  log_management_db:
    image: mongo:4.4
    container_name: log_management_db
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=el20167
      - MONGO_INITDB_ROOT_PASSWORD=thrylos
      - MONGO_INITDB_DATABASE=logManagementDB
    volumes:
      - log_management_db_data:/data/db
    networks:
      - app-network

  # Problems Database
  problems_db:
    image: mongo:4.4
    container_name: problems_db
    ports:
      - "27018:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=el20167
      - MONGO_INITDB_ROOT_PASSWORD=thrylos
      - MONGO_INITDB_DATABASE=problemsDB
    volumes:
      - problems_db_data:/data/db
    networks:
      - app-network

  # Results Database
  results_db:
    image: mongo:4.4
    container_name: results_db
    ports:
      - "27019:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=el20167
      - MONGO_INITDB_ROOT_PASSWORD=thrylos
      - MONGO_INITDB_DATABASE=resultsDB
    volumes:
      - results_db_data:/data/db
    networks:
      - app-network

  # Submissions Database
  submissions_db:
    image: mongo:4.4
    container_name: submissions_db
    ports:
      - "27020:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=el20167
      - MONGO_INITDB_ROOT_PASSWORD=thrylos
      - MONGO_INITDB_DATABASE=submissionsDB
    volumes: 
      - submissions_db_data:/data/db
    networks:
      - app-network

  # Users Database
  users_db:
    image: mongo:4.4
    container_name: users_db
    ports:
      - "27021:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=el20167
      - MONGO_INITDB_ROOT_PASSWORD=thrylos
      - MONGO_INITDB_DATABASE=usersDB
    volumes:
      - users_db_data:/data/db
    networks:
      - app-network

  cli_service:
    build:
      context: ./admin-cli
      dockerfile: Dockerfile
    environment:
      - SECRET_STRING_SERVICES=v3ry53cr3t53rv1c35
      - SECRET_ENCRYPT=12345678901234567890123456789012
    networks:
      - app-network
    depends_on:
      - accounts_service

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=el20167
      - RABBITMQ_DEFAULT_PASS=thrylos
    volumes:
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Accounts Service
  accounts_service:
    build:
      context: ./accounts-service
      dockerfile: Dockerfile
    ports:
      - "3005:3005"
    depends_on:
       - users_db  
       - rabbitmq
          
    environment:
      - MONGO_URI=mongodb://el20167:thrylos@users_db:27017/usersDB?authSource=admin
      - PORT=3005
      - RABBITMQ_URL=amqp://el20167:thrylos@rabbitmq
      - CREDITS_EXCHANGE_NAME=creditsExchange
      - CREDITS_ADDED_QUEUE_NAME=userCreditsAddedQueue
      - CREDITS_UPDATED_QUEUE_NAME=creditsUpdatedQueue
      - CREDITS_ADDED_ROUTING_KEY=usercreditsAdded
      - CREDITS_UPDATED_ROUTING_KEY=creditsUpdated
      - USER_CREATED_EXCHANGE=userExchange
      - USER_CREATED_QUEUE=userCreatedQueue
      - USER_CREATED_ROUTING_KEY=userCreated
      - SECRET_JWT=v3ry53cr3tJWT2024
      - SECRET_ENCRYPT=12345678901234567890123456789012
      - SECRET_STRING_SERVICES=v3ry53cr3t53rv1c35
    networks:
      - app-network
    restart: always

  # Add Credits Service
  add_credits_service:
    build:
      context: ./add-credits-service
      dockerfile: Dockerfile
    ports:
      - "3004:3004"
    depends_on:
      - rabbitmq

    environment:
      - RABBITMQ_URL=amqp://el20167:thrylos@rabbitmq
      - PORT=3004
      - CREDITS_EXCHANGE_NAME=creditsExchange
      - CREDITS_ADDED_QUEUE_NAME=creditsAddedQueue
      - CREDITS_ADDED_ROUTING_KEY=creditsAdded
      - USER_CREDITS_ROUTING_KEY=usercreditsAdded
      - SECRET_JWT=v3ry53cr3tJWT2024
      - STRIPE_SECRET_KEY=sk_test_51PL4H52NFrK87oLN59VV7eG7THLmomHJkGnrkboC7jK39t3XH5Nrv8CllZvDqX7LGVpDGVmRQjJUmRVMLu5aYgPJ00LskHYERi
      - SECRET_ENCRYPT=12345678901234567890123456789012
      - SECRET_STRING_SERVICES=v3ry53cr3t53rv1c35
    networks:
      - app-network
    restart: always

   # Log Management Service
  log_management_service:
    build:
      context: ./log-management-service
      dockerfile: Dockerfile
    ports:
      - "3007:3007"
    depends_on:
      - log_management_db
      - rabbitmq
    environment:
      - RABBITMQ_URL=amqp://el20167:thrylos@rabbitmq
      - PORT=3007
      - MONGODB_URL=mongodb://el20167:thrylos@log_management_db:27017/logManagementDB?authSource=admin
      - USER_CREATED_QUEUE=userCreatedQueue  
      - USER_CREATED_EXCHANGE=userExchange   
      - USER_CREATED_ROUTING_KEY=userCreated
      - RESULTS_STORED_QUEUE=logQueue   
      - RESULTS_STORED_EXCHANGE=logExchange    
      - RESULTS_STORED_ROUTING_KEY=logKey   
      - SECRET_JWT=v3ry53cr3tJWT2024
      - SECRET_ENCRYPT=12345678901234567890123456789012
      - SECRET_STRING_SERVICES=v3ry53cr3t53rv1c35
    networks:
      - app-network
    restart: always
  
  #Modify Submission Service
  modify_submissions_service:
    build:
      context: ./modify-submissions-service
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    depends_on:
      - rabbitmq
    environment:
      - PORT=3001
      - RABBITMQ_URL=amqp://el20167:thrylos@rabbitmq
      - EXCHANGE_NAME=submissionsExchange
      - ROUTING_KEY=submissions
      - SECRET_JWT=v3ry53cr3tJWT2024
      - SECRET_ENCRYPT=12345678901234567890123456789012
      - SECRET_STRING_SERVICES=v3ry53cr3t53rv1c35
    networks:
      - app-network
    restart: always

  # Problem Issue Service
  problem_issue_service:
    build:
      context: ./problem-issue-service
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    depends_on:
       - problems_db    
       - rabbitmq
  
    environment:
      - MONGO_URI=mongodb://el20167:thrylos@problems_db:27017/problemsDB?authSource=admin
      - PORT=3002
      - RABBITMQ_URL=amqp://el20167:thrylos@rabbitmq
      - EXCHANGE_NAME=problemsExchange
      - QUEUE_NAME=prolemQueue
      - ROUTING_KEY=problems
      - CREDITS_EXCHANGE_NAME=creditsExchange
      - CREDITS_ADDED_QUEUE_NAME=creditsAddedQueue
      - CREDITS_UPDATED_QUEUE_NAME=creditsUpdatedQueue
      - CREDITS_ADDED_ROUTING_KEY=creditsAdded
      - CREDITS_UPDATED_ROUTING_KEY=creditsUpdated
      - SOLVER_EXCHANGE_NAME=wrapperExchange
      - SOLVER_QUEUE_NAME=wrapperQueue
      - SOLVER_ROUTING_KEY=wrapper
      - PROGRESS_EXCHANGE_NAME=progressExchange
      - PROGRESS_QUEUE_NAME=progressQueue
      - PROGRESS_ROUTING_KEY=progress
      - SECRET_JWT=v3ry53cr3tJWT2024
      - SECRET_ENCRYPT=12345678901234567890123456789012
      - SECRET_STRING_SERVICES=v3ry53cr3t53rv1c35
    networks:
      - app-network
    restart: always

  # Results Management Service
  results_management_service:
    build:
      context: ./results-management-service
      dockerfile: Dockerfile
    ports:
      - "3003:3003"
    depends_on:
      - results_db
      - rabbitmq
    environment:
      - MONGO_URI=mongodb://el20167:thrylos@results_db:27017/resultsDB?authSource=admin
      - PORT=3003
      - RABBITMQ_URL=amqp://el20167:thrylos@rabbitmq
      - SOLVER_EXCHANGE=resultsExchange
      - SOLVER_QUEUE=resultsQueue
      - SOLVER_ROUTING_KEY=resultsKey
      - SUBMISSION_EXCHANGE=submissionResultsExchange
      - SUBMISSION_QUEUE=submissionResultsQueue
      - SUBMISSION_ROUTING_KEY=submissionResultsKey
      - LOG_EXCHANGE=logExchange
      - LOG_QUEUE=logQueue
      - LOG_ROUTING_KEY=logKey
      - RESULT_DELETE_EXCHANGE_NAME=resultDeleteExchange
      - RESULT_DELETE_QUEUE_NAME=resultDeleteQueue
      - RESULT_DELETE_ROUTING_KEY=resultDelete
      - SECRET_JWT=v3ry53cr3tJWT2024
      - SECRET_ENCRYPT=12345678901234567890123456789012
      - SECRET_STRING_SERVICES=v3ry53cr3t53rv1c35
    networks:
      - app-network
    restart: always


   # Solver Service
  solver_service:
    build:
      context: ./solver-service
      dockerfile: Dockerfile
    ports:
      - "3006:3006"
    depends_on:
      - rabbitmq
    environment:
      - RABBITMQ_URL=amqp://el20167:thrylos@rabbitmq
      - PORT=3006
      - SOLVER_EXCHANGE_NAME=solverExchange
      - SOLVER_QUEUE_NAME=solverQueue
      - SOLVER_ROUTING_KEY=solver
      - RESULTS_EXCHANGE_NAME=resultsExchange
      - RESULTS_ROUTING_KEY=resultsKey
      - SECRET_ENCRYPT=12345678901234567890123456789012
      - SECRET_STRING_SERVICES=v3ry53cr3t53rv1c35
    networks:
      - app-network
    restart: always


    # Submissions Service
  submissions_service:
    build:
      context: ./submissions-service
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - submissions_db
      - rabbitmq
    environment:
      - MONGO_URI=mongodb://el20167:thrylos@submissions_db:27017/submissionsDB?authSource=admin
      - PORT=3000
      - RABBITMQ_URL=amqp://el20167:thrylos@rabbitmq
      - EXCHANGE_NAME=submissionsExchange
      - PROBLEMS_EXCHANGE_NAME=problemsExchange
      - PROBLEMS_ROUTING_KEY=problems
      - QUEUE=submissionsQueue
      - ROUTING_KEY=submissions
      - RESULTS_EXCHANGE_NAME=submissionResultsExchange
      - RESULTS_QUEUE=submissionResultsQueue
      - RESULTS_ROUTING_KEY=submissionResultsKey
      - PROGRESS_EXCHANGE_NAME=progressExchange
      - PROGRESS_QUEUE_NAME=progressQueue
      - PROGRESS_ROUTING_KEY=progress
      - RESULT_DELETE_EXCHANGE_NAME=resultDeleteExchange
      - RESULT_DELETE_QUEUE_NAME=resultDeleteQueue
      - RESULT_DELETE_ROUTING_KEY=resultDelete
      - SECRET_JWT=v3ry53cr3tJWT2024
      - SECRET_ENCRYPT=12345678901234567890123456789012
      - SECRET_STRING_SERVICES=v3ry53cr3t53rv1c35
    networks:
      - app-network
    restart: always
  
  solver_wrapper_service:
    build:
      context: ./solver-wrapper-service
      dockerfile: Dockerfile
    ports:
      - "3008:3008"
    depends_on:
      - rabbitmq
    environment:
      - RABBITMQ_URL=amqp://el20167:thrylos@rabbitmq
      - PORT=3008
      - SOLVER_EXCHANGE_NAME=solverExchange
      - SOLVER_QUEUE_NAME=solverQueue
      - SOLVER_ROUTING_KEY=solver
      - SOLVER_WRAPPER_EXCHANGE_NAME=wrapperExchange
      - SOLVER_WRAPPER_QUEUE_NAME=wrapperQueue
      - SOLVER_WRAPPER_ROUTING_KEY=wrapper
      - SECRET_ENCRYPT=12345678901234567890123456789012
      - SECRET_STRING_SERVICES=v3ry53cr3t53rv1c35
    networks:
      - app-network
    restart: always



  # Frontend Service
  frontend_service:
    build:
      context: ./front-end/solve_my_problem
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=development
      - PORT=4000
      - NEXT_PUBLIC_STRIPE_PUBLIC_KEY=pk_test_51PL4H52NFrK87oLNidwxfZmGN9Smwl5L1Hip8NzB7x2lBrvptxOAqmNsGdszd4OfGYm5eJnYAMveS5cDbMMV7NnO00KtRkXbBO
      - NEXT_PUBLIC_SECRET_STRING_SERVICES=v3ry53cr3t53rv1c35
      - NEXT_PUBLIC_SECRET_ENCRYPT=12345678901234567890123456789012
    networks:
      - app-network
    restart: always


networks:
  app-network:
    driver: bridge

volumes:
  log_management_db_data:
  problems_db_data:
  results_db_data:
  submissions_db_data:
  users_db_data:
  rabbitmq_data:

